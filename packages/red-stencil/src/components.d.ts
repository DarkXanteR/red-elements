/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { RedCheckboxSet as RedCheckboxSet } from './components/common/red-checkbox-set/red-checkbox-set';

interface HTMLRedCheckboxSetElement extends RedCheckboxSet, HTMLElement {
}
declare var HTMLRedCheckboxSetElement: {
  prototype: HTMLRedCheckboxSetElement;
  new (): HTMLRedCheckboxSetElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "red-checkbox-set": HTMLRedCheckboxSetElement;
  }
  interface ElementTagNameMap {
      "red-checkbox-set": HTMLRedCheckboxSetElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "red-checkbox-set": JSXElements.RedCheckboxSetAttributes;
      }
  }
  namespace JSXElements {
      export interface RedCheckboxSetAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          first?: string,
          last?: string
      }
  }
}

import { RedEditableList as RedEditableList } from './components/common/red-editable-list/editable-list';

interface HTMLRedEditableListElement extends RedEditableList, HTMLElement {
}
declare var HTMLRedEditableListElement: {
  prototype: HTMLRedEditableListElement;
  new (): HTMLRedEditableListElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "red-editable-list": HTMLRedEditableListElement;
  }
  interface ElementTagNameMap {
      "red-editable-list": HTMLRedEditableListElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "red-editable-list": JSXElements.RedEditableListAttributes;
      }
  }
  namespace JSXElements {
      export interface RedEditableListAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          first?: string,
          last?: string
      }
  }
}

